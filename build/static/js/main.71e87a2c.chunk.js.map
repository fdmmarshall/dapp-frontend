{"version":3,"sources":["images/HI-RES-CARTOON_transparent_bg.png","components/ProfileSection.js","App.js","index.js"],"names":["module","exports","profile","className","src","require","alt","App","props","useState","currentAccount","setCurrentAccount","setImage","contractABI","abi","checkIfWalletIsConnected","a","window","ethereum","console","log","request","method","length","account","connectWallet","alert","accounts","meme","provider","ethers","providers","Web3Provider","signer","getSigner","memePortalContract","Contract","getTotalMemes","count","toNumber","sendMeme","memeTxn","hash","wait","useEffect","ProfileSection","onClick","role","aria-label","onChange","image","withIcon","imgExtension","maxFileSize","buttonText","label","buttonStyles","backgroundColor","color","opacity","border","fontWeight","ReactDOM","render","document","getElementById"],"mappings":"67NAAAA,EAAOC,QAAU,IAA0B,2D,qLCe5BC,EAbC,WACd,OACE,yBAAKC,UAAU,iBACZ,IACD,yBACEA,UAAU,sCACVC,IAAKC,EAAQ,IACbC,IAAI,O,QCuJGC,G,MAzJH,SAACC,GACX,MAA4CC,mBAAS,IAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAA0BF,mBAAS,IAAnC,mBAAcG,GAAd,WAQMC,EAAcC,EAAIA,IAElBC,EAAwB,uCAAG,gCAAAC,EAAA,oEAERC,OAAbC,EAFqB,EAErBA,SAFqB,uBAK3BC,QAAQC,IAAI,gCALe,0BAQ3BD,QAAQC,IAAI,8BAA+BF,GARhB,wBAWNA,EAASG,QAAQ,CAAEC,OAAQ,iBAXrB,QAaL,IAbK,OAahBC,QACLC,EAAUA,EAAQ,GACxBL,QAAQC,IAAI,+BAAgCI,GAC5Cb,EAAkBa,IAElBL,QAAQC,IAAI,+BAlBe,kDAqB7BD,QAAQC,IAAR,MArB6B,0DAAH,qDAyBxBK,EAAa,uCAAG,gCAAAT,EAAA,oEAEGC,OAAbC,EAFU,EAEVA,SAFU,uBAKhBQ,MAAM,iBALU,0CASKR,EAASG,QAAQ,CACtCC,OAAQ,wBAVQ,OASZK,EATY,OAalBR,QAAQC,IAAI,YAAaO,EAAS,IAClChB,EAAkBgB,EAAS,IAdT,kDAgBlBR,QAAQC,IAAR,MAhBkB,0DAAH,qDAoBbQ,EAAI,uCAAG,wCAAAZ,EAAA,oEAEYC,SAAbC,EAFC,EAEDA,UAFC,wBAKDW,EAAW,IAAIC,IAAOC,UAAUC,aAAad,GAC7Ce,EAASJ,EAASK,YAClBC,EAAqB,IAAIL,IAAOM,SAxDpB,6CA0DhBvB,EACAoB,GAVK,SAaWE,EAAmBE,gBAb9B,cAaHC,EAbG,OAcPnB,QAAQC,IAAI,gCAAiCkB,EAAMC,YAd5C,UAgBeJ,EAAmBK,WAhBlC,eAgBDC,EAhBC,OAiBPtB,QAAQC,IAAI,aAAcqB,EAAQC,MAjB3B,UAmBDD,EAAQE,OAnBP,eAoBPxB,QAAQC,IAAI,aAAcqB,EAAQC,MApB3B,UAsBOP,EAAmBE,gBAtB1B,QAsBPC,EAtBO,OAuBPnB,QAAQC,IAAI,gCAAiCkB,EAAMC,YAvB5C,wBAyBPpB,QAAQC,IAAI,iCAzBL,0DA4BTD,QAAQC,IAAR,MA5BS,0DAAH,qDAoCV,OAJAwB,qBAAU,WACR7B,MACC,IAGD,yBAAKZ,UAAU,iBACb,yBAAKA,UAAU,2CACb,kBAAC0C,EAAD,MACA,8BACInC,GACA,4BACEP,UAAU,yGACV2C,QAASrB,GAFX,mBASN,yBAAKtB,UAAU,iBACb,yBAAKA,UAAU,cACb,0BAAM4C,KAAK,MAAMC,aAAW,aAA5B,gBAGC,GAJH,cAQA,yBAAK7C,UAAU,eAAf,iIAIA,yBAAKA,UAAU,OACb,kBAAC,IAAD,iBACMK,EADN,CAEEyC,SAxHK,SAACC,GACdtC,EAASsC,IAwHDC,UAAU,EACVC,aAAc,CAAC,OAAQ,OAAQ,QAC/BC,YAAa,QACbC,WAAY,cACZC,MAAO,8CACPpD,UAAW,kBACXqD,aAAc,CACZC,gBAAiB,cACjBC,MAAO,UACPC,QAAS,EACTC,OAAQ,oBACRC,WAAY,QAGhB,yBAAK1D,UAAU,sBACb,4BACEA,UAAU,sJACV2C,QAASlB,GAFX,sBC9IZkC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.71e87a2c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/HI-RES-CARTOON_transparent_bg.ee6b6a96.png\";","import React from 'react';\n\nconst profile = () => {\n  return (\n    <div className='flex flex-row'>\n      {' '}\n      <img\n        className='inline-block h-32 w-32 rounded-full'\n        src={require('../images/HI-RES-CARTOON_transparent_bg.png')}\n        alt=''\n      />\n    </div>\n  );\n};\n\nexport default profile;\n","import React, { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport ImageUploading from 'react-images-upload';\nimport ProfileSection from './components/ProfileSection';\nimport abi from './utils/MemePortal.json';\nimport './App.css';\n\nconst App = (props) => {\n  const [currentAccount, setCurrentAccount] = useState('');\n  const [image, setImage] = useState('');\n\n  const onDrop = (image) => {\n    setImage(image);\n  };\n\n  const contractAddress = '0xA72Fd9fF5CFC715C17E9fD04e39E4A97557871d0';\n\n  const contractABI = abi.abi;\n\n  const checkIfWalletIsConnected = async () => {\n    try {\n      const { ethereum } = window;\n\n      if (!ethereum) {\n        console.log('Make sure you have Metamask!');\n        return;\n      } else {\n        console.log('We have the ethereum object', ethereum);\n      }\n\n      const accounts = await ethereum.request({ method: 'eth_accounts' });\n\n      if (accounts.length !== 0) {\n        const account = account[0];\n        console.log('Found an authorized account:', account);\n        setCurrentAccount(account);\n      } else {\n        console.log('No authorized account found');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const connectWallet = async () => {\n    try {\n      const { ethereum } = window;\n\n      if (!ethereum) {\n        alert('Get MetaMask!');\n        return;\n      }\n\n      const accounts = await ethereum.request({\n        method: 'eth_requestAccounts',\n      });\n\n      console.log('Connected', accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const meme = async () => {\n    try {\n      const { ethereum } = window;\n\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const memePortalContract = new ethers.Contract(\n          contractAddress,\n          contractABI,\n          signer\n        );\n\n        let count = await memePortalContract.getTotalMemes();\n        console.log('Retrieved total meme count...', count.toNumber());\n\n        const memeTxn = await memePortalContract.sendMeme();\n        console.log('Mining -- ', memeTxn.hash);\n\n        await memeTxn.wait();\n        console.log('Minied -- ', memeTxn.hash);\n\n        count = await memePortalContract.getTotalMemes();\n        console.log('Retrieved total meme count...', count.toNumber());\n      } else {\n        console.log(\"Ethereum object doesn't exist\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    checkIfWalletIsConnected();\n  }, []);\n\n  return (\n    <div className='mainContainer'>\n      <div className='flex flex-row justify-evenly w-full m-5'>\n        <ProfileSection />\n        <div>\n          {!currentAccount && (\n            <button\n              className='bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow'\n              onClick={connectWallet}\n            >\n              Connet Wallet\n            </button>\n          )}\n        </div>\n      </div>\n      <div className='dataContainer'>\n        <div className='header m-2'>\n          <span role='img' aria-label='hand-wave'>\n            ðŸ‘‹\n          </span>\n          {''}\n          Hey there!\n        </div>\n\n        <div className='text-center'>\n          I'm Flor a software developer. In my free time I like to learn about\n          web3. I'm always up for a good laugh, so send me a meme!\n        </div>\n        <div className='m-8'>\n          <ImageUploading\n            {...props}\n            onChange={onDrop}\n            withIcon={true}\n            imgExtension={['.jpg', '.gif', '.png']}\n            maxFileSize={5242880}\n            buttonText={'Choose meme'}\n            label={'Max size: 5mb, image types: jpg | gif | png'}\n            className={'border-blue-700'}\n            buttonStyles={{\n              backgroundColor: 'transparent',\n              color: '#1d4ed8',\n              opacity: 1,\n              border: '1px solid #1d4ed8',\n              fontWeight: 500,\n            }}\n          />\n          <div className='w-full text-center'>\n            <button\n              className='m-1 bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded'\n              onClick={meme}\n            >\n              Send a meme!\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}